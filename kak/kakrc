define-command config      %{ e ~/.config/kak/kakrc; }

set-option global tabstop      4
set-option global indentwidth  0
set-option global aligntab     false
set-option global scrolloff    6,0
set-option global ui_options   ncurses_status_on_top=false ncurses_assistant=none ncurses_enable_mouse=yes ncurses_set_title=no
set-option global incsearch    true
# set-option global idle_timeout 100
set-option global modelinefmt  '%val{cursor_line}:%val{cursor_char_column}+%val{selection_length} | {{mode_info}} | %val{bufname} {{context_info}} | %val{client}@%val{session}'
colorscheme daniel

set-option global makecmd 'make -j32'
set-option global grepcmd 'rg -n'

add-highlighter global/ line '%val{cursor_line}' default,rgb:101010
add-highlighter global/ wrap -word -indent
add-highlighter global/ show-matching
add-highlighter global/ show-whitespaces -spc ' ' -lf ' '
# add-highlighter global/ number-lines -hlcursor

# source ~/.config/kak/qualia.kak
source ~/.config/kak/vertical-selection.kak
source ~/.config/kak/flygrep.kak
source ~/.config/kak/gdb.kak
source ~/.config/kak/xx.kak

require-module xx
require-module flygrep
require-module kitty

set-option global kitty_window_type 'os-window'

declare-user-mode filter
map global normal = ': enter-user-mode filter<ret>'
map global filter = -docstring 'Calculate (Decimal)'    '|calc -p<ret>'
map global filter b -docstring 'Calculate (Hexdecimal)' '|calc -p "_=base(2)"<ret>'
map global filter h -docstring 'Calculate (Binary)'     '|calc -p "_=base(16)"<ret>'
map global filter r -docstring 'Reverse'                '|tac<ret>'
map global filter x -docstring 'Execute C code'         '|tcc -run -<ret>'

map global insert <s-ret> <ret>
map global insert <s-backspace> <backspace>
map global prompt <s-ret> <ret>
map global prompt <s-backspace> <backspace>

map global normal v     ': vertical-selection-down<ret>'
map global normal <a-v> ': vertical-selection-up<ret>'
map global normal V     ': vertical-selection-up-and-down<ret>'


alias global s ctags-search
alias global c gdb-continue
alias global p gdb-print
alias global br gdb-toggle-breakpoint
alias global finish gdb-finish
alias global f flygrep
map global user b ': gdb-toggle-breakpoint<ret>' -docstring 'Toggle Breakpoint.'
map global normal <down>  ': gdb-next<ret>'
map global normal <right> ': gdb-step<ret>'
gdb-enable-autojump

define-command set-main    %{ rename-client main;   set-option global jumpclient  main;   }
define-command set-maker   %{ rename-client maker;  set-option global toolsclient maker;  }
define-command set-doc     %{ rename-client doctor; set-option global docsclient  doctor; }

define-command d  -params 0..1 %{ git diff --submodule=diff %arg{@} }
define-command co -params 0..1 %{ git checkout %arg{@} }
define-command gst %{ git status }

define-command auto-make %{ 
	hook global BufWritePost .* %{ make }
}

define-command ide %{
	set-main
	new set-maker
	new e test.q
	hook global BufWritePost .* %{ make run; clang-parse; ctags-update-tags }
}

map global normal '*' '<c-s>*'
map global normal '\'     -docstring 'select all'     '<c-s>_"fZ*%s<ret>Z"fz<a-z>a'
map global normal <tab>   -docstring 'next buffer'     ':b <tab>'
map global normal <S-tab> -docstring 'previous buffer' ':b <tab>'
map global normal <space> ','
map global normal ',' ': enter-user-mode user<ret>'

map global normal Y ',y' -docstring 'yank to clipboard'
map global user y '<a-|>wl-copy<ret>: echo yanked to clipboard.<ret>' -docstring 'yank to clipboard.'
map global user p '!wl-paste<ret>' -docstring 'paste from clipboard'

map global user f -docstring 'search ctags'   ': ctags-search<ret><tab>'
map global user s -docstring 'grep'           ': grep<ret>'
map global user c -docstring 'comment line'   ': comment-line<ret>'
map global user d -docstring 'delete buffer'  ': db<ret>'
map global user u -docstring 'update ctags'   ': ctags-update-tags<ret>'
map global user x -docstring 'execute c code' '!tcc -run -<ret>'
map global user X -docstring 'execute and replace c code.' '|tcc -run -<ret>'

map global goto g -docstring 'center screen'  '<esc>\vv'
map global goto d -docstring 'search ctags'   '<esc><c-s>_<a-i>w:ctags-search<ret><tab>'
map global goto p -docstring 'previous error' '<esc>: make-previous-error<ret>'
map global goto n -docstring 'next error'     '<esc>: make-next-error<ret>'
map global goto o -docstring 'goto header'    '<esc>: c-alternative-file<ret>'

hook global InsertCompletionShow .* %{
	try %{
		execute-keys -draft 'h<a-K>\h<ret>'
		map window insert <tab> <c-n>
		map window insert <s-tab> <c-p>
	}
}

hook global InsertCompletionHide .* %{
	unmap window insert <tab> <c-n>
	unmap window insert <s-tab> <c-p>
}

try %{ source .kakrc }

require-module sway
